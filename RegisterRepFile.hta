<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Drag and Drop File</title>
	<HTA:APPLICATION ID="oHTA"/>

	<style type="text/css">
		th {background-color:#c0c0c0}
		td {background-color:#f0f4f4}
		input {height:25}
	</style>
</head>
<body style="background-color:#f0f8f8">
	<h2>報告書の登録</h2>
	報告書番号
	<input type="text" id="tourokuNo">
	<input type="button" id="iraiOK" value="OK">

	<div id="divNext">
	<br>
	<b>①依頼書ファイル</b><br>
	<table border="1"><thead><th>登録番号</th><th>依頼書ファイル</th><th>状態</th></thead><tbody id="iraiTable"></tbody></table>
	<input type="button" id="iraiTouroku" value="依頼書ファイル登録"  style="margin:5px 0 0 0">
	<a id="iraiSaki"></a>
	<br><br>
	<b>②報告書ファイル</b><br>
	<div style="width:600">
		<iframe id=ifr style="height:60;width=600"></iframe><br>
		<input id=inp1 style="width:520;float:left">
		<input type="file" id=fl align="right" style="width:0;float:right">
	</div>
	<input type="button" id="reportTouroku" value="報告書ファイル登録"  style="margin:5px 0 0 0">
	<br><br>
	<input type="button" id="exit" value="終了">
	</div>
</body>


<SCRIPT LANGUAGE="JavaScript">
	// 不可視化
	document.getElementById("divNext").style.visibility = "hidden";

	// イベントハンドラ登録
	document.getElementById("iraiOK").onclick = OnClickIraiOK;
	document.getElementById("iraiTouroku").onclick = OnClickIraiTouroku;
	document.getElementById("reportTouroku").onclick = OnClickReportTouroku;
	document.getElementById("exit").onclick = function(){window.close()};

	// イベントハンドラ定義
	function OnClickClearBtn(row){
		TableCell(row, 1).getElementsByTagName("input")(0).value = "";
		updateStatusCell();
	}

	function OnChangeInputFile(row){
		TableCell(row, 1).getElementsByTagName("input")(0).value = TableCell(row, 1).getElementsByTagName("input")(1).value;
		updateStatusCell();
	}

	function OnClickIraiOK() {
		var LIST = ["A1", "A2", "A3"];
		document.getElementById("divNext").style.visibility = "visible";
		for( i = document.getElementById("iraiTable").getElementsByTagName("TR").length - 1; i>=0; i--){
			document.getElementById("iraiTable").deleteRow(i)
		}
		for( i=0; i < LIST.length; i++){
			var iraiNo = LIST[i]
			var path = "C:\\Users\\sdkn1\\Desktop\\" + iraiNo + ".pdf";
			var newTR = document.getElementById("iraiTable").insertRow(i);
			newTR.insertCell(-1).innerHTML = iraiNo;
			newTR.insertCell(-1).innerHTML = 
				"<input type='text' class='tdPath' style='width:500' value='" + path + "'>" +
				"<input type='file' class='tdFile' style='width:0' onChange='OnChangeInputFile(" + i + ")'>" +
				"<input type='button' class='tdBtn' value='クリア' onclick='OnClickClearBtn(" + i + ")'>";
			newTR.insertCell(-1).innerHTML = "comment";
		}
		updateStatusCell();
	}

	function OnClickIraiTouroku() {
		updateStatusCell();
		document.getElementById("iraiSaki").innerHTML = "C:\\AAA\\BBB\\CCC.pdf"
		document.getElementById("iraiSaki").href = "file:///C/AAA/BBB/CCC.pdf"
		alert("登録処理")
	}
	function OnClickReportTouroku() {
		alert("登録処理")
	}

	function updateStatusCell() {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		for( i = document.getElementById("iraiTable").getElementsByTagName("TR").length - 1; i>=0; i--){
			var path = TableCell(i,1).getElementsByTagName("input")(0).value
			if( path == "" ) {
				TableCell(i, 2).innerHTML = "ファイルなし"
			} else if( fso.FileExists(path) ){
				TableCell(i, 2).innerHTML = "OK"
			} else {
				TableCell(i, 2).innerHTML = "[エラー] ファイルが見つかりません"
			}
		}
	}

	// ユーティリティ
	function TableCell(row, col) {
		var TRS = document.getElementById("iraiTable").getElementsByTagName("TR")
		return TRS(row).getElementsByTagName("TD")(col)
	}
</SCRIPT>


<script LANGUAGE="JavaScript">
	// Drag and Drop Setup
	getEI=function(id){return document.getElementById(id)}
	setupDnD(ifr, getEI('ifr'), getEI('fl'), getEI('inp1'));

	// Drag and Drop Setup function
	//   objIFR:   IFRAME object for drag and drop area
	//   elemIFR:  IFRAME element for drag and drop area
	//   elemFile: INPUT(TYPE=FILE) element for providing another method of input file path
	//   elemDisp: element for display the file path (the element must have value property)
	//
	function setupDnD(objIFR, elemIFR, elemFile, elemDisp){
		elemDisp.value=''
		objIFR.location = 'about:blank'
		elemIFR.onreadystatechange=function(){
			//alert(this.readyState)
			if( this.readyState != "complete" ) {
				return
			}
			if( objIFR.location != 'about:blank' && String(objIFR.location).slice(-4) != ".hta" ) {
				elemDisp.value = decodeURI(String(objIFR.location).replace(/^file:/,'').replace(/^\/+(\w:)/,'$1').replace(/\//g,'\\'))
				objIFR.location = 'about:blank' // いったんblankにしないと下記doc.open()ができない
			} else if( objIFR.location == 'about:blank') {
				var doc=elemIFR.contentWindow.document
				doc.open()
				doc.write('ここにファイルをドラッグ＆ドロップしてください')
				doc.close()
				// 上記doc.write()するとobjIFR.locationは自身のhtaファイルのパスとなる
			}
		}
		elemFile.onchange = function() {
			if( this.value == "" ) { return }
			elemDisp.value = decodeURI(String(this.value))
		}
	}
</script>

</html>
